[{"authors":null,"categories":null,"content":"I am a senior year civil engineering undergraduate student at Rashtreeya Vidyalaya College of Engineering. I am specializing in the field of Deep Learning for earth observation.\nI was the President of American Society of Civil Engineers Student chapter RVCE. I have been fortunate enough to be part of the Concrete canoe team leading the structural and hull design. I regularly write on Quora. I tweet about FOSS, Deep Learning and my wild thoughts.\n  Download my resum√©.\n","date":1554595200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1567641600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://github.com/amanbagrecha/author/aman-bagrecha/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/amanbagrecha/author/aman-bagrecha/","section":"authors","summary":"I am a senior year civil engineering undergraduate student at Rashtreeya Vidyalaya College of Engineering. I am specializing in the field of Deep Learning for earth observation.\nI was the President of American Society of Civil Engineers Student chapter RVCE.","tags":null,"title":"Aman Bagrecha","type":"authors"},{"authors":null,"categories":null,"content":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"bb560906b6a99893cc21387348c0b074","permalink":"https://github.com/amanbagrecha/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/amanbagrecha/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Âê≥ÊÅ©ÈÅî","type":"authors"},{"authors":null,"categories":null,"content":"   Table of Contents  What you will learn Program overview Courses in this program Meet your instructor FAQs    What you will learn  Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas  Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program  Python basics Build a foundation in Python.   Visualization Learn how to visualize data with Plotly.   Statistics Introduction to statistics for data science.   Meet your instructor Aman Bagrecha FAQs Are there prerequisites? There are no prerequisites for the first course.\n How often do the courses run? Continuously, at your own pace.\n  Begin the course   ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://github.com/amanbagrecha/courses/example/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/amanbagrecha/courses/example/","section":"courses","summary":"An example of using Wowchemy's Book layout for publishing online courses.","tags":null,"title":"üìä Learn Data Science","type":"book"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz What is the difference between lists and tuples? Lists\n Lists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, 'Hello world']  Tuples\n Tuples are immutable - they can\u0026rsquo;t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, 'Hello world')   Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"17a31b92253d299002593b7491eedeea","permalink":"https://github.com/amanbagrecha/courses/example/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/amanbagrecha/courses/example/python/","section":"courses","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Write Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026quot;country == 'Canada'\u0026quot;) fig = px.bar(data_canada, x='year', y='pop') fig.show()  ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"1b341b3479c8c6b1f807553b77e21b7c","permalink":"https://github.com/amanbagrecha/courses/example/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/amanbagrecha/courses/example/visualization/","section":"courses","summary":"Learn how to visualize data with Plotly.\n","tags":null,"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n  1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\n The parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$.   Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6f4078728d71b1b791d39f218bf2bdb1","permalink":"https://github.com/amanbagrecha/courses/example/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/amanbagrecha/courses/example/stats/","section":"courses","summary":"Introduction to statistics for data science.\n","tags":null,"title":"Statistics","type":"book"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://github.com/amanbagrecha/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/amanbagrecha/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Aman Bagrecha"],"categories":["Django"],"content":"Overview  Geodjango is built on top of django and adds spatial functionality such as storing points, lines , polygon and multipolygon. It is prepackaged with Django but requires few additional softwares to make it fully functional. These include- GDAL, PROJ, GEOS, PostGIS. These can be downloaded from osgeo4W which bundles all these libraries. Then application can be added to apps in settings with django.contrib.gis to the installed apps. An additional setting is required, which is to locate osgeo4w directory in django. If you install osgeo4w in default directory, you need to put the following code within the settings.py file.  # for window os\rimport os\rimport posixpath\rif os.name == 'nt':\rimport platform\rOSGEO4W = r\u0026quot;C:\\OSGeo4W\u0026quot;\rif '64' in platform.architecture()[0]:\rOSGEO4W += \u0026quot;64\u0026quot;\rassert os.path.isdir(OSGEO4W), \u0026quot;Directory does not exist: \u0026quot; + OSGEO4W\ros.environ['OSGEO4W_ROOT'] = OSGEO4W\ros.environ['GDAL_DATA'] = OSGEO4W + r\u0026quot;\\share\\gdal\u0026quot;\ros.environ['PROJ_LIB'] = OSGEO4W + r\u0026quot;\\share\\proj\u0026quot;\ros.environ['PATH'] = OSGEO4W + r\u0026quot;\\bin;\u0026quot; + os.environ['PATH']\r Setup the database to postgis instead of postgresql.  # in settings.py file\rDATABASES = {\r'default': {\r'ENGINE': 'django.contrib.gis.db.backends.postgis',\r'NAME': 'database_name_here',\r'USER': 'postgres',\r'PASSWORD': 'password_here',\r'HOST': 'localhost',\r'PORT': '5432',\r},\r}\r We now create a model to upload geotagged images and store the geolocation as point information into the database. For demo purposes we can have image and geom as mandatory field, rest can be blank.  from django.db import models\rfrom django.contrib.auth.models import User # our user model\rfrom django.contrib.gis.db import models # geodjango import\rfrom django.utils import timezone # to capture date created from metadata\rclass ImageUpload(models.Model):\ruser = models.ForeignKey(User, on_delete= models.SET_DEFAULT, default=1)\rimage = models.ImageField( null=False, blank=False, upload_to = 'geotaggedimages/') date_created = models.DateTimeField(default=timezone.now, null=True) # date and time image is uploaded\rimage_url = models.URLField(max_length=250, null=True, blank=True) # grab the url from s3 bucket on save\rdate_captured = models.DateTimeField(null=True, blank = True) # date and time image was captured\rgeom = models.PointField( null=True, blank=False) # grab the geolocation from image and store in database as POINT field\rclass Meta:\rverbose_name = 'geotagged images'\rverbose_name_plural = 'geotagged images'\rdef __str__(self):\rreturn str(self.image.name)\r We now run migrations and migrate the model using .\\manage.py makemigrations and .\\manage.py migrate. We now create our view to accept POST/AJAX request from our frontend  from django.shortcuts import render\rfrom django.contrib.auth.decorators import login_required\rfrom django.contrib.auth import login from django.contrib import messages\rfrom .models import ImageUpload\rfrom django.contrib.gis.geos import Point\rfrom django.http import JsonResponse\rfrom PIL import Image\rfrom PIL.ExifTags import GPSTAGS\rfrom PIL.ExifTags import TAGS\rfrom datetime import datetime\r#________________________________________FUNCTIONS FOR IMAGE EXIF DATA______________________________________________________________________________#\r# COURTESY OF https://developer.here.com/blog/getting-started-with-geocoding-exif-image-metadata-in-python3\rdef get_decimal_from_dms(dms, ref):\rdegrees = dms[0]\rminutes = dms[1] / 60.0\rseconds = dms[2] / 3600.0\rif ref in ['S', 'W']:\rdegrees = -degrees\rminutes = -minutes\rseconds = -seconds\rreturn round(degrees + minutes + seconds, 5)\rdef get_coordinates(geotags):\rlat = get_decimal_from_dms(geotags['GPSLatitude'], geotags['GPSLatitudeRef'])\rlon = get_decimal_from_dms(geotags['GPSLongitude'], geotags['GPSLongitudeRef'])\rreturn (lon, lat)\rdef get_geotagging(exif):\r\u0026quot;\u0026quot;\u0026quot;\r# 34853 is key for tag GPSInfo\r\u0026quot;\u0026quot;\u0026quot;\rif not exif:\rraise ValueError(\u0026quot;No EXIF metadata found\u0026quot;)\rgeotagging = {}\rfor (idx, tag) in TAGS.items():\rif tag == 'GPSInfo':\rif idx not in exif:\rraise ValueError(\u0026quot;No EXIF geotagging found\u0026quot;)\rfor (key, val) in GPSTAGS.items():\rif key in exif[idx]:\rgeotagging[val] = exif[idx][key]\rreturn geotagging\r#________________________________________END OF FUNCTIONS FOR IMAGE EXIF DATA______________________________________________________________________________#\t@login_required(login_url='login')\rdef home_page(request):\ruser = request.user # get logged in user\rif request.is_ajax():\rfiles = request.FILES.getlist('images') # returns files: eg: [TemporaryUploadedFile: human15-28.png (image/png), ]\rmessage = []\rfor f in files: # loop over all images\rtry:\rwith Image.open(f) as img:\rexif = img._getexif()\rgeotags = get_geotagging(exif) # this decides if image is geotagged or nongeotagged\rget_corrd = get_coordinates(geotags)\rprint(\u0026quot;get_corrd\u0026quot;,get_corrd)\rgeoimage = ImageUpload(user=user, image=f) # create an instance of model\rgeoimage.geom = Point(get_corrd) # X is longitude, Y is latitude, Point(X,Y) ; returns SRID=4326;POINT (11.88454 43.46708) [WKT format]\rgeoimage.save()\rmessage.append(f\u0026quot;file {f} uploaded to images/\u0026quot;)\rexcept Exception as e:\rmessage.append(f\u0026quot;{e}\u0026quot;)\rreturn JsonResponse({\u0026quot;status\u0026quot;: message}, safe=False) #redirect('home')\relse:\rreturn render(request, \u0026quot;GisMap/home.html\u0026quot;, {'Title': \u0026quot;Home Page\u0026quot;}) # name of my app is GisMap, and home.html is the fornt-end from where images are uploaded.\r  These steps will ensure you have multiple images uploaded at once and all the geolocation information can be stored in database, which later can be import to QGIS for data visualisation. Although both postgresql and django admin allows users to use the geometry.\n   ","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://github.com/amanbagrecha/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/amanbagrecha/post/getting-started/","section":"post","summary":"Overview  Geodjango is built on top of django and adds spatial functionality such as storing points, lines , polygon and multipolygon. It is prepackaged with Django but requires few additional softwares to make it fully functional.","tags":["Geodjango","postgis","django","osGeo4W"],"title":"Upload multiple geotagged images and store POINTS in postgresql database using geodjango","type":"post"},{"authors":null,"categories":["R"],"content":"\rR Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars)\r## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00\rfit \u0026lt;- lm(dist ~ speed, data = cars)\rfit\r## ## Call:\r## lm(formula = dist ~ speed, data = cars)\r## ## Coefficients:\r## (Intercept) speed ## -17.579 3.932\r\rIncluding Plots\rYou can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1))\rpie(\rc(280, 60, 20),\rc(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;),\rcol = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;),\rinit.angle = -50, border = NA\r)\r\rFigure 1: A fancy pie chart.\r\r\r","date":1606875194,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606875194,"objectID":"bf1eb249db79f10ace7d22321494165a","permalink":"https://github.com/amanbagrecha/post/2020-12-01-r-rmarkdown/","publishdate":"2020-12-01T21:13:14-05:00","relpermalink":"/amanbagrecha/post/2020-12-01-r-rmarkdown/","section":"post","summary":"R Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Charts Academic supports the popular Plotly chart format.\nSave your Plotly JSON in your page folder, for example chart.json, and then add the {{\u0026lt; chart data=\u0026quot;chart\u0026quot; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\n  (function() { let a = setInterval( function() { if ( typeof window.Plotly === 'undefined' ) { return; } clearInterval( a ); Plotly.d3.json(\"./line-chart.json\", function(chart) { Plotly.plot('chart-945163872', chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  You might also find the Plotly JSON Editor useful.\nMath Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$  renders as\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\n1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Callouts Academic supports a shortcode for callouts, also referred to as asides, hints, or alerts. By wrapping a paragraph in {{% callout note %}} ... {{% /callout %}}, it will render as an aside.\n{{% callout note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /callout %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Spoilers Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.\n{{\u0026lt; spoiler text=\u0026quot;Click to view the spoiler\u0026quot; \u0026gt;}} You found me! {{\u0026lt; /spoiler \u0026gt;}}  renders as\nClick to view the spoiler You found me!\n Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R  renders as\n  Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it üôå ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://github.com/amanbagrecha/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/amanbagrecha/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Aman Bagrecha"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://github.com/amanbagrecha/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/amanbagrecha/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Aman Bagrecha"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://github.com/amanbagrecha/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/amanbagrecha/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Introduction to Natural Language Processing By Aman Bagrecha\n What is Natural Language?  Those Languages which are not artificial or computer generated :) Natural Language is what Humans communicate through Eg. English, Hindi, Kannada, French‚Ä¶   What is Natural Language Processing?  Enabling computers to understand Natural Language. Data is the new oil! It has information hidden underneath. Only problem is it is not that simply to extract information.   Why is it complex?  Ambiguity in meaning of sentence  \u0026ndash; ‚ÄúI fought with my brother‚Äù Did he fight along with his brother or against him?\n New words are added everyday Position of adverb/verb can change meaning or mean nothing  \u0026ndash; ‚ÄúHe‚Äôs working hard‚Äù vs ‚ÄúHe‚Äôs hard working‚Äù vs ‚Äúhard he‚Äôs working‚Äù\n Same word can have different meaning based on context  \u0026ndash; Aditya is a friend I can always bank on for help\n\u0026ndash; Aditya is going to the bank\n Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}}\r{{% fragment %}} **Two** {{% /fragment %}}\r{{% fragment %}} Three {{% /fragment %}}\r Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}}\r- Only the speaker can read these notes\r- Press `S` key to view\r{{% /speaker_note %}}\r Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}}\r{{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}}\r{{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}\r  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1,\r.reveal section h2,\r.reveal section h3 {\rcolor: navy;\r}\r  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://github.com/amanbagrecha/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/amanbagrecha/slides/example/","section":"slides","summary":"Introduction to Natural Language Processing.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Project Setup create package.json\nnpm init -y\r install express\nnpm install --save express\r in index.js file\nimport express from 'express'; // both are same (works with node 14.5 and above..)\rconst express = require('express'); // old version\r To enable the first line of code for above we have to make changes in package.json as follows\n\u0026quot;type\u0026quot; : \u0026quot;module\u0026quot;,\r run server\nnpm start\r install nodemon package to refresh the server on each save\nnpm install --save-dev nodemon\r In package.json add under scripts. This is done to start application using nodemon.\n\u0026quot;start\u0026quot;: \u0026quot;nodemon index.js\u0026quot;;\r For modularity we create another folder where we would store all our routes create a folder routes/users.js which has the following basic template.\nimport express from 'express';\r// Use the express.Router class to create modular, mountable route handlers\rconst router = express.Router();\r// routes here\r// eg: router.get(...)\r// export the app `router` so that it can be imported in index.js\rexport default router;\r Now import the exported router app to index.js as follows\nimport router from './routes/users.js';\rapp.use(\u0026quot;/people\u0026quot;, router);\r now\nrouter.post('/', (req, res) =\u0026gt; {\r// when making post request, we have access to req.body\ruser_list.push(req.body); // user_list is list of dictoriay contianing all users\r})\r  Next step: Setting up mongo db database npm install mongoose\nimport mongoose from 'mongoose';\r const CONNECTION_URL = \u0026quot;mongodb+srv://\u0026lt;username\u0026gt;:\u0026lt;password\u0026gt;@cluster0.frghl.mongodb.net/\u0026lt;data_basename\u0026gt;?retryWrites=true\u0026amp;w=majority\u0026quot;;\rmongoose.connect(CONNECTION_URL, { useNewUrlParser: true, useUnifiedTopology: true })\r.then(() =\u0026gt; app.listen(PORT, () =\u0026gt; console.log(`Server Running on Port: http://localhost:${PORT}`))) // what to do when we connection is made\r.catch((error) =\u0026gt; console.log(`${error} did not connect`)); // what if it goes wrong\rmongoose.set('useFindAndModify', false);\r We now create schema for our database. Since this is basic crud, we want username, email. we do so by creating user_model.js file inside models folder in root directory.\nimport mongoose from 'mongoose';\rconst postSchema = mongoose.Schema({\rfirstname: String,\rlastname: String,\remail: { // required field\rtype: String,\rrequired: true\r},\rcreatedAt: { type: Date,\rdefault: new Date(),\r},\r})\rvar user_model = mongoose.model('user_model', postSchema);\rexport default user_model;\r After exporting the model, we now import in our functions.js file.\nError messages\nimport { Mongoose } from 'mongoose';\r^^^^^^^^\rSyntaxError: Named export 'Mongoose' not found. The requested module 'mongoose' is a CommonJS module, which may not support all module.exports as named exports.\rCommonJS modules can always be imported via the default export, for example using:\rimport pkg from 'mongoose';\rconst { Mongoose } = pkg;\r ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://github.com/amanbagrecha/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/amanbagrecha/project/internal-project/","section":"project","summary":"A how-to guide to build node express CRUD API.","tags":["node express; API; CRUD"],"title":"CRUD Application using node express api","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://github.com/amanbagrecha/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/amanbagrecha/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":["Aman Bagrecha","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://github.com/amanbagrecha/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/amanbagrecha/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Aman Bagrecha","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://github.com/amanbagrecha/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/amanbagrecha/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://github.com/amanbagrecha/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/amanbagrecha/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]